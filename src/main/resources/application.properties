## ------------------------------------------------ 本yapi代码生成器的个性化配置 需要根据实际情况改 -----------------------------

# yapi服务地址
yapi.url=http://192.168.10.110:9091
# 每个项目都有唯一的标识token，用户可以使用这个token值来请求项目 openapi.
yapi.project.token=49c6fec6e05ef99119052971628c67e3c3c58a89cd52681a44e9c5dda36ebc4d
# 需要生成Java代码的接口id，多个接口id时逗号隔开
yapi.api.interface.ids=4561
# 需要生成Java代码的分类id，只支持单个分类id，配置该项会获取分类下的所有接口id
yapi.api.cat.id=

# 类文件的包路径
yapi.generator.base.package=com.anlythree.com.generator
# SINGLE: 所有接口生成到一个文件中 MULTIPLE: 每个接口一个文件
yapi.generator.class.patterns=SINGLE
# 显示在类文件注释中
yapi.generator.class.author=yaorongke
# patterns=single时 controller、service的默认名称
yapi.generator.class.defaultName=My


## ------------------------------------------------ yapi对外开放的接口地址 不要改 ----------------------------------------

# 获取接口数据（有详细接口数据定义文档） openapi地址
yapi.api.interface.path=${yapi.url}/api/interface/get?token=${yapi.project.token}
# 获取某个分类下接口列表  openapi地址
yapi.api.cat.path=${yapi.url}/api/interface/list_cat?page=1&limit=1000&token=${yapi.project.token}


## ------------------------------------------------ 服务的各种配置 不要改 --------------------------------------------------

# freemarker配置
spring.freemarker.template-loader-path=classpath:/templates
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.ftl